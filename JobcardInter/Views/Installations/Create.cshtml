@model JobcardInter.Models.Installation

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Installation Report</h4>
        <hr />
        @Html.ActionLink("Add an Area ", "Index", "Areas")
        <br />
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BranchNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BranchNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Store_Manager, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Store_Manager, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Store_Manager, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })*@
                <br />
                <p>
                    EM @Html.RadioButtonFor(model => model.Type, "EM")
                <p>
                    AM @Html.RadioButtonFor(model => model.Type, "AM")
                <p>
                    RF @Html.RadioButtonFor(model => model.Type, "RF")

                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Antennas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Antennas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Antennas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Serial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Serial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Serial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mental_Detector, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <br />
                @*@Html.EditorFor(model => model.Mental_Detector, new { htmlAttributes = new { @class = "form-control" } })*@
                <p>
                    AM @Html.RadioButtonFor(model => model.Mental_Detector, "AM")
                <p>
                    RF @Html.RadioButtonFor(model => model.Mental_Detector, "RF")
                    @Html.ValidationMessageFor(model => model.Mental_Detector, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remote, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Remote, new { htmlAttributes = new { @class = "form-control" } })*@
                <br />
                <br />
                <p>
                    AM @Html.RadioButtonFor(model => model.Remote, "AM")
                <p>
                    RF @Html.RadioButtonFor(model => model.Remote, "RF")

                    @Html.ValidationMessageFor(model => model.Remote, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <h5>Configuration/Distances Between Antennas</h5>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.Enterance1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Enterance1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enterance1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Distance1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Distance1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Distance1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Enterance2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Enterance2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enterance2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Distance2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Distance2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Distance2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Enterance3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Enterance3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enterance3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Distance3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Distance3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Distance3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Enterance4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Enterance4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enterance4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Distance4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Distance4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Distance4, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <h5>Peripheral Equipment Delivered:</h5>
        <br />
        <h5>Deactivator</h5>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.Q1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Q1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Q1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Make, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lockable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Lockable, new { htmlAttributes = new { @class = "form-control" } })*@
                <br />

                <p>
                    Yes @Html.RadioButtonFor(model => model.Lockable, "Yes")
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    No @Html.RadioButtonFor(model => model.Lockable, "No")

                    @Html.ValidationMessageFor(model => model.Lockable, "", new { @class = "text-danger" })
            </div>
        </div>

        <h5>Detacher</h5>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.Q2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Q2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Q2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Strength, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Strength, new { htmlAttributes = new { @class = "form-control" } })*@
                <br />

                <p>
                    Standard @Html.RadioButtonFor(model => model.Strength, "Standard")
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    Super @Html.RadioButtonFor(model => model.Strength, "Super")

                    @Html.ValidationMessageFor(model => model.Strength, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <h5>Tags</h5>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.TQ1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TQ1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TQ1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TType1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TType1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TType1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TQ2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TQ2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TQ2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TType2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TType2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TType2, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <h5>Labels</h5>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.TQ3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TQ3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TQ3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TType3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TType3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TType3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TQ4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TQ4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TQ4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TType4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TType4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TType4, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <h5>Finish:</h5>

        <div class="form-group">
            @Html.LabelFor(model => model.Cable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Cable)
                    @Html.ValidationMessageFor(model => model.Cable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Grouting, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Grouting)
                    @Html.ValidationMessageFor(model => model.Grouting, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PPU, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PPU)
                    @Html.ValidationMessageFor(model => model.PPU, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PPA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PPA)
                    @Html.ValidationMessageFor(model => model.PPA, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Power_Points, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Power_Points)
                    @Html.ValidationMessageFor(model => model.Power_Points, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DB_Labelled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DB_Labelled)
                    @Html.ValidationMessageFor(model => model.DB_Labelled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comments1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments1, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <h5>Attached</h5>
        <div class="form-group">
            @Html.LabelFor(model => model.Completion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Completion, new { htmlAttributes = new { @class = "form-control" } })*@
                <br />
                <p>
                    Yes @Html.RadioButtonFor(model => model.Completion, "Yes")
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    No @Html.RadioButtonFor(model => model.Completion, "No")

                    @Html.ValidationMessageFor(model => model.Completion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SinedC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.SinedC, new { htmlAttributes = new { @class = "form-control" } })*@
                <br />
                <p>
                    Yes @Html.RadioButtonFor(model => model.SinedC, "Yes")
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    No @Html.RadioButtonFor(model => model.SinedC, "No")


                    @Html.ValidationMessageFor(model => model.SinedC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SignedD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.SignedD, new { htmlAttributes = new { @class = "form-control" } })*@
                <br />
                <p>
                    Yes @Html.RadioButtonFor(model => model.SignedD, "Yes")
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    No @Html.RadioButtonFor(model => model.SignedD, "No")


                    @Html.ValidationMessageFor(model => model.SignedD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Screen_Shots, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Screen_Shots, new { htmlAttributes = new { @class = "form-control" } })*@
                <br />
                <p>
                    Yes @Html.RadioButtonFor(model => model.Screen_Shots, "Yes")
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    No @Html.RadioButtonFor(model => model.Screen_Shots, "No")


                    @Html.ValidationMessageFor(model => model.Screen_Shots, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Staff_Training_Conduct, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Staff_Training_Conduct, new { htmlAttributes = new { @class = "form-control" } })*@
                <br />
                <p>
                    Yes @Html.RadioButtonFor(model => model.Staff_Training_Conduct, "Yes")
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    No @Html.RadioButtonFor(model => model.Staff_Training_Conduct, "No")


                    @Html.ValidationMessageFor(model => model.Staff_Training_Conduct, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment2, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <h5>INSTALLED BY:</h5>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Signature, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Signature, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Signature, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("View all installation reports", "Index")
    <br />
    @Html.ActionLink("Back to dashboard ", "MainHome", "Dash")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
